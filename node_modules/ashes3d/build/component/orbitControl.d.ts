import { Screen } from "../webgl2/screen";
import { Entity } from "../ECS/entityMgr";
import { Camera } from "../camera";
import { Transform } from "../transform";
import { ComponentSystem } from "../ECS/component";
export declare class OrbitControl {
    pitch: number;
    yaw: number;
    speed: number;
    distance: number;
    movement: Float32Array;
    unprojectMatrix: Float32Array;
    private X;
    private Y;
    private Z;
    vx: number;
    vy: number;
    vz: number;
    vyaw: number;
    vpitch: number;
    vscale: number;
    threshold: number;
    damping: number;
    lastalpha: any;
    lastbeta: any;
    camera: Camera;
    trans: Transform;
    constructor(screen: Screen, target: Entity, pitch?: number, yaw?: number, speed?: number, damping?: number);
    moveHandler: (e: any) => void;
    touchHandler: () => (e: any) => void;
    scrollHandler: ({ deltaY }: {
        deltaY: any;
    }) => void;
    orientationHandler: (e: any) => void;
    static bindEvents(screen: HTMLElement, controler: OrbitControl): void;
}
export declare class OrbitControlSystem extends ComponentSystem {
    group: any[];
    depends: string[];
    onUpdate(): void;
    static updatePosition(ctr: OrbitControl): void;
}
