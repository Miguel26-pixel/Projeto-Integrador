export declare class Texture {
    static defaultData: Uint8Array;
    image: HTMLImageElement;
    sampler: Sampler;
    isDirty: boolean;
    glType: number;
    isCubetex: boolean;
    width: number;
    height: number;
    border: number;
    data: any;
    level: number;
    internalformat: number;
    format: number;
    type: number;
    flipY: boolean;
    constructor(rawImage: any, sampler?: any, width?: number, height?: number, border?: number);
    static clone(origin: Texture): Texture;
    static cubetexOrder: number[];
    static createTexture(gl: WebGL2RenderingContext, tex: Texture): void;
    static unbindTexture(gl: WebGL2RenderingContext, tex: Texture, channel: number): void;
    static bindTexture(gl: WebGL2RenderingContext, tex: Texture, channel: number): void;
}
export declare class Sampler {
    magFilter: any;
    minFilter: any;
    wrapS: any;
    wrapT: any;
    texture?: WebGLTexture;
    constructor({ magFilter, minFilter, wrapS, wrapT, texture }?: {
        magFilter?: number;
        minFilter?: number;
        wrapS?: number;
        wrapT?: number;
        texture?: any;
    });
}
