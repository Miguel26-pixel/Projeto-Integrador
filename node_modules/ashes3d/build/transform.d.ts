import { Entity } from "./ECS/entityMgr";
import { ComponentSystem } from "./ECS/component";
export declare class Transform {
    entity: Entity;
    worldPos: Float32Array;
    translate: Float32Array;
    rotate: Float32Array;
    scale: Float32Array;
    quaternion: Float32Array;
    localMatrix: Float32Array;
    worldMatrix: Float32Array;
    worldInverseMatrix: Float32Array;
    worldNormalMatrix: Float32Array;
    isVisible: boolean;
    isDirty: boolean;
    jointsMatrices: Float32Array;
    constructor();
    static clone(source: Transform): Transform;
}
export declare class TransformSystem extends ComponentSystem {
    group: any[];
    depends: string[];
    onUpdate(): void;
    static decomposeMatrix(trans: Transform, mat?: Float32Array): void;
    static updateMatrix(trans: Transform): void;
}
